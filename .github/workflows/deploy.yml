name: App Deploy

on:
  push:
    branches: [master]

jobs:
  docker:
    runs-on: ubuntu-latest
    name: Push docker image
    steps:
      - name: App version
        run: echo "Picked the app version ${GITHUB_SHA}"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup NodeJS using the obtained nvm version
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish to Registry
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ secrets.DOCKER_USERNAME }}/voice-to-text-bot/voice-to-speech-app:latest
            ghcr.io/${{ secrets.DOCKER_USERNAME }}/voice-to-text-bot/voice-to-speech-app:${{ github.sha }}
          build-args: APP_VERSION=${{ github.sha }},INFRA_TOKEN=${{ secrets.INFRA_TOKEN }}

  heroku-primary:
    runs-on: ubuntu-latest
    name: Deploy to Heroku Primary account
    steps:
      - name: App version
        run: echo "Picked the app version ${GITHUB_SHA}"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup NodeJS using the obtained nvm version
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"

      - name: Login to Heroku Container Registry
        uses: docker/login-action@v2
        with:
          registry: registry.heroku.com
          username: ${{ secrets.HEROKU_EMAIL }}
          password: ${{ secrets.HEROKU_API_KEY }}

      - name: Push docker image
        run: heroku container:push web --app ${{ env.D_NAME }} --arg APP_VERSION=${{ env.D_VERSION }} --arg=${{ env.D_INFRA_TOKEN }}
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          D_NAME: ${{ secrets.HEROKU_APP_MASTER }}
          D_VERSION: ${{ github.sha }}
          D_INFRA_TOKEN: ${{ secrets.INFRA_TOKEN }}

      - name: Release docker image
        run: heroku container:release web --app ${{ env.D_NAME }}
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          D_NAME: ${{ secrets.HEROKU_APP_MASTER }}

  #  heroku-secondary:
  #    runs-on: ubuntu-latest
  #    name: Deploy to Heroku Secondary account
  #    needs: heroku-primary
  #    steps:
  #      - name: App version
  #        run: echo "Picked the app version ${GITHUB_SHA}"
  #
  #      - name: Checkout
  #        uses: actions/checkout@v3
  #
  #      - name: Setup NodeJS using the obtained nvm version
  #        uses: actions/setup-node@v3
  #        with:
  #          node-version-file: ".nvmrc"
  #
  #      - name: Login to Heroku Container Registry
  #        uses: docker/login-action@v2
  #        with:
  #          registry: registry.heroku.com
  #          username: ${{ secrets.HEROKU_EMAIL }}
  #          password: ${{ secrets.HEROKU_API_KEY }}
  #
  #      - name: Push docker image
  #        run: heroku container:push web --app ${{ env.D_NAME }} --arg APP_VERSION=${{ env.D_VERSION }} --arg=${{ env.D_INFRA_TOKEN }}
  #        env:
  #          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  #          D_NAME: ${{ secrets.HEROKU_APP_SLAVE }}
  #          D_VERSION: ${{ github.sha }}
  #          D_INFRA_TOKEN: ${{ secrets.INFRA_TOKEN }}
  #
  #      - name: Release docker image
  #        run: heroku container:release web --app ${{ env.D_NAME }}
  #        env:
  #          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  #          D_NAME: ${{ secrets.HEROKU_APP_SLAVE }}

  production:
    runs-on: ubuntu-latest
    name: Deploy to Railway.app production
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup NodeJS using the obtained nvm version
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"

      - name: Install Railway CLI
        run: npm i -g @railway/cli
#      - name: Deploy Dockerfile to PRODUCTION
#        run: railway up
#        env:
#          RAILWAY_TOKEN: ${{ secrets.RAILWAY_PRODUCTION_TOKEN }}
