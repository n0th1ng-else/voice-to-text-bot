name: Scan

on:
  workflow_call:

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run tests
    timeout-minutes: 5
    steps:
      - name: App version
        run: echo "Picked the app version ${GITHUB_SHA}"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install NodeJS and NPM modules
        uses: ./.github/actions/npm

      - name: Run tests
        run: pnpm test

      - name: Store test coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage

  validate:
    runs-on: ubuntu-latest
    name: Run ${{ matrix.arrays.label }}
    timeout-minutes: 3
    strategy:
      matrix:
        arrays:
          [
            { command: "typecheck", label: "typecheck" },
            { command: "lint:all", label: "lint" },
            { command: "format:check", label: "code formatting check" },
          ]
    env:
      COMMAND: ${{ matrix.arrays.command }}
    steps:
      - name: App version
        run: echo "Picked the app version ${GITHUB_SHA}"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install NodeJS and NPM modules
        uses: ./.github/actions/npm

      - name: Run validation
        run: pnpm ${{ env.COMMAND }}

  sonar-cloud:
    runs-on: ubuntu-latest
    name: Run SonarCloud
    needs: [test, validate]
    timeout-minutes: 5
    steps:
      - name: App version
        run: echo "Picked the app version ${GITHUB_SHA}"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download test coverage results
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: coverage

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
